# -*- coding: utf-8 -*-
# author:shihua
# coder:shihua
# 这是一个DAG管理类，主要功能管理DAG，主要技术Networkx,描述符技术
"""
模块介绍
-------

这是一个DAG管理类，主要功能管理DAG，主要技术Networkx,描述符技术

设计模式：

    （1）  无 

关键点：    

    （1）Networkx

    （2）描述符技术
    
主要功能：            

    （1）管理DAG

使用示例
-------


类说明
------

"""



####### 载入程序包 #################################################################################
###################################################################################################



from collections import OrderedDict
import networkx as nx



####### 有向无环图管理类 #########################################################################
### 功能：                                                                                    ###
### (1) 计算图管理                                                                            ###
### 技术：                                                                                    ###
### (1) Networkx                                                                              ###
### (2) 描述符技术                                                                            ###
################################################################################################



####### DAG图专用管理数据字典 ###########################################################################
####################################################################################################



class DAGManagerDict(OrderedDict):
    '''
    类介绍：

        定义一个DAG图专用管理数据字典,继承有序字典
    '''

    def __init__(self,*args,**kwargs):
        '''
        属性功能：

            定义一个初始化DAG管理字典方法

        参数：
            无

        返回：
            无
        '''

        super(DAGManagerDict,self).__init__(*args,**kwargs)


    def __getattr__(self,key):
        '''
        方法功能：

            定义一个获取属性魔法方法

        参数：
            key (str): 字典键的名称

        返回：
            value (object): 字典键对应的值对象
        '''

        value = self[key]
        if isinstance(value,OrderedDict):
            value = DAGManagerDict(value)
        elif isinstance(value,dict):
            value = DAGManagerDict(value)
        return value



####### DAG管理类 ##################################################################################
###################################################################################################



class DirectedAcyclicGraph(object):
    '''
    类介绍：

        这是一个DAG管理类，主要功能管理DAG，主要技术Networkx,描述符协议
    '''


    def __init__(self,name):
        '''
        属性功能：

            定义一个初始化方法，主要用来定义DAG管理器名称

        参数：
            name (str): 名称
            graph (DAGManagerDict): DAG管理器字典对象
        '''

        self.name = name
        graph = DAGManagerDict()
        graph['name'] = 'DAG'
        graph['remarks'] = 'no params'
        graph['obj'] = nx.DiGraph()
        self.graph = graph


    def __get__(self,instance,owner):
        '''
        方法功能：

            重载一个获取类对象的魔法方法

        参数：
            instance (object): 托管类，即将描述符类声明为类属性的类
            owner (object): 托管实例，即托管类的实例对象

        返回：
            无
        '''

        return self.graph
        


##################################################################################################
##################################################################################################


