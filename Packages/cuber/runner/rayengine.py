# -*- coding: utf-8 -*-
# author:shihua
# coder:shihua
# 这是一个计算引擎类，主要功能提供具体计算环境，主要技术Ray,Dask(后续提供),Spark(后续提供)
"""
模块介绍
-------

这是一个计算引擎类，主要功能提供具体计算环境，主要技术Ray,Dask(后续提供),Spark(后续提供)

设计模式：

    （1）  无 

关键点：    

    （1）Ray
    
主要功能：            

    （1）计算引擎

使用示例
-------


类说明
------

"""



####### 载入程序包 ##############################################################################
################################################################################################



import ray



####### 计算引擎类 ###############################################################################
### 功能：                                                                                    ###
### (1) 计算引擎                                                                              ###
### 技术：                                                                                    ###
### (1) Ray                                                                                  ###
################################################################################################



####### Ray计算引擎类 ############################################################################
#################################################################################################



class RayRunner(object):
    '''
    类介绍:

        这是一个基于Ray的计算引擎类，主要功能提供具体计算环境，主要技术Ray
    '''


    def __init__(self,init_success=False,*args,**kwargs):
        '''
        属性功能：

            定义一个初始化方法，创建Ray计算引擎客户端实例

        参数：
            address (str): ray集群Head地址，eg.'ray://192.168.1.63:10001'
        '''

        try:
            self.runner_context = ray.init(address=kwargs['address'])
            self.init_success = True
            print('Ray init success!')
        except:
            print("Ray init failed!")
            self.init_success = init_success



################################################################################################
################################################################################################


